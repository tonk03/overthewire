level0:
ssh bandit.labs.overthewire.org -l bandit0 -p 2220
bandit0

level1:
ZjLjTmM6FvvyRnrb2rfNWOZOTa6ip5If

level2:
263JGJPfgU6LtdEvgfWU1XP5yac29mFx

level3:
cat ./
MNk8KNH3Usiio41PRUEoDFPqfxLPlSmx

level4:
ls -a
2WmrDFRmJIq3IPxneAaMGhap0pFhF3NJ

level5:
strings ./*
4oQYVPkxZOOEOO5pTW81FB8j8lxXGUQw

level6:
find . -type f -size 1033c -readable ! -executable
HWasnPhtq9AVKe0dmk45nxy20cvUa6EG

level7:
find / -user bandit7 -group bandit6 -size 33c 2>/dev/null
"2>/dev/null" means send descriptor "2" stderr (error) to /dev/null (black hole)
morbNTDkSW6jIlUc0ymOdMaLnOlFVAaj

level8:
grep -i 'millionth' data.txt 
"-i" is to ignore case sensitivity
dfwvzFQi4mU0wfNbFOe9RoWskMLg7eEc

level9:
sort data.txt | uniq -u
"sort" rearranges all lines in the file to be sorted, | sends that sorted output
to uniq -u which compares adjacent lines and prints only "-u" unique lines
4CKMh1JI91bUIZZPXDqGanal4xvAg0JM

level 10:
strings data.txt | grep -E '={3,}'
"strings data.txt" shows only human readable strings from the file. The output is
piped to "grep -E '={3,}" which uses a "-E"  regex to match lines containing 3 or
more = characters  
FGUW5ilLVJrxX9kMYMmlN4MgbpfMiqey

level 11:
base64 -d data.txt 
-d decodes the base64 encoded data.txt
dtR173fZKb0RRsDFSGsg2RWnpNVj3qRr

level 12:
tr 'A-Za-z' 'N-ZA-Mn-za-m' < data.txt
takes every uppercase (A-Z) and lowercase (a-z) letter from data.txt  and uses tr to 
replace each letter with the one 13 positions ahead in the alphabet (ROT13). 
"<" redirects the file as input to tr instead of typing it manually.
7x16WNeHIi5YkIhWsfFIqoognUTyj9Q4

level 13:
mktemp -d, then we cp over data.txt, then we did "xxd -r data.txt > file.bin" and 
from then on check the type using "file" and decompressed with "gzip -d" or "bzip -d"
for gzip, you have to rename the suffiz to end with "gz" or "z" for it to decompress.

FO5dwFsc0cbaIiH0h8J2eUks2vdTDwAn

level 14:
scp -P 2220 bandit13@bandit.labs.overthewire.org:~/sshkey.private ~/Desktop/techPortfolio/overthewire/bandit/
chmod 600 sshkey.private
ssh -i sshkey.private bandit.labs.overthewire.org -l bandit14 -p 2220

scp copy sshkey.private from bandit13 to my pc where the colon ":" separates the remote 
host from the remote file path. "chmod" restricts key permissions to only me for 
security reasons. The final ssh uses -i to log in with the key. 
The password for the next level is stored in /etc/bandit_pass/bandit14

level 15:
cat /etc/bandit_pass/bandit14
MU4VWeTyJk8ROof1qqmcBPaLh7lDCPvS

nc localhost 30000
use the above password and get:
8xCjnmgoKbGLhHFAZlGE5Tmu4M2tKJQo

level 16:
ncat --ssl localhost 30001
kSkvUpMQ7lBYyCM4GBPvCvT1BfWRy0Dx

level 17:
nmap -p31000-32000 localhost
openssl s_client -connect localhost:[port]
ncat --ssl localhost 31790

Check "rsakey17" for the rsakey

nmap scans the local machine for open ports within the range 31000 to 32000 and shows
which ones are accepting connections (listeing). openssl s_client attempts to connect
to the given port using SSL/TLS, displaying the handshake details and certificates if 
the service supports encryption. ncat -ssl connects to port 31790 on the local machine
using SSL/TLS, letting you send and receive encrypted data directly.

level 18:
ssh -i rsakey17 bandit.labs.overthewire.org -l bandit17 -p 2220
diff passwords.old passwords.new
grep 'x2gLTTjFwMOhQ8oWNbMN362QKxfRqGlO' passwords.new 
x2gLTTjFwMOhQ8oWNbMN362QKxfRqGlO

